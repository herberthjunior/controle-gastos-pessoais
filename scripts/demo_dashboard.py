#!/usr/bin/env python3
"""
Demonstra√ß√£o do Dashboard - Sistema de Controle de Gastos Pessoais
Script para demonstrar as funcionalidades do dashboard sem iniciar o servidor.
"""

import pandas as pd
import os
from datetime import datetime

def demonstrar_funcionalidades():
    """Demonstra as funcionalidades do dashboard."""
    print("=" * 60)
    print("DEMONSTRA√á√ÉO DO DASHBOARD AVAN√áADO")
    print("Sistema de Controle de Gastos Pessoais")
    print("=" * 60)
    
    # Verificar dados
    arquivo_dados = "../data/gastos.xlsx"
    
    if not os.path.exists(arquivo_dados):
        print("‚ùå Arquivo de dados n√£o encontrado!")
        return False
    
    try:
        df = pd.read_excel(arquivo_dados)
        print(f"‚úÖ Dados carregados: {len(df)} registros")
        
        # Converter data
        df['Data'] = pd.to_datetime(df['Data'], format='%d/%m/%Y', errors='coerce')
        
        # Estat√≠sticas b√°sicas
        print("\nüìä ESTAT√çSTICAS B√ÅSICAS:")
        print(f"   ‚Ä¢ Total de transa√ß√µes: {len(df):,}")
        print(f"   ‚Ä¢ Per√≠odo: {df['Data'].min().strftime('%d/%m/%Y')} a {df['Data'].max().strftime('%d/%m/%Y')}")
        print(f"   ‚Ä¢ Categorias: {df['Categoria'].nunique()}")
        print(f"   ‚Ä¢ Bancos: {', '.join(df['Origem'].unique())}")
        
        # An√°lise de gastos vs receitas
        gastos = df[df['Valor'] > 0]['Valor'].sum()
        receitas = abs(df[df['Valor'] < 0]['Valor'].sum())
        saldo = df['Valor'].sum()
        
        print(f"\nüí∞ AN√ÅLISE FINANCEIRA:")
        print(f"   ‚Ä¢ Total de gastos: R$ {gastos:,.2f}")
        print(f"   ‚Ä¢ Total de receitas: R$ {receitas:,.2f}")
        print(f"   ‚Ä¢ Saldo l√≠quido: R$ {saldo:,.2f}")
        
        # Top categorias
        print(f"\nüèÜ TOP 5 CATEGORIAS (GASTOS):")
        top_categorias = df[df['Valor'] > 0].groupby('Categoria')['Valor'].sum().sort_values(ascending=False).head(5)
        for i, (categoria, valor) in enumerate(top_categorias.items(), 1):
            print(f"   {i}. {categoria}: R$ {valor:,.2f}")
        
        # Distribui√ß√£o por banco
        print(f"\nüè¶ DISTRIBUI√á√ÉO POR BANCO:")
        por_banco = df.groupby('Origem').agg({
            'Valor': ['sum', 'count']
        }).round(2)
        for banco in df['Origem'].unique():
            total = df[df['Origem'] == banco]['Valor'].sum()
            count = len(df[df['Origem'] == banco])
            print(f"   ‚Ä¢ {banco}: R$ {total:,.2f} ({count} transa√ß√µes)")
        
        # Funcionalidades do dashboard
        print(f"\nüöÄ FUNCIONALIDADES DO DASHBOARD:")
        print("   ‚úÖ 6 abas interativas de an√°lise")
        print("   ‚úÖ M√©tricas principais em tempo real")
        print("   ‚úÖ Gr√°ficos interativos (Pizza, Barras, Timeline)")
        print("   ‚úÖ Heatmap de padr√µes de gastos")
        print("   ‚úÖ Rankings e top gastos")
        print("   ‚úÖ Filtros din√¢micos (categoria, banco, per√≠odo)")
        print("   ‚úÖ Tabela detalhada com busca")
        print("   ‚úÖ Estat√≠sticas avan√ßadas")
        print("   ‚úÖ Insights autom√°ticos")
        print("   ‚úÖ Comparativo entre bancos")
        print("   ‚úÖ An√°lise temporal completa")
        
        print(f"\nüé® RECURSOS VISUAIS:")
        print("   ‚Ä¢ Interface responsiva e moderna")
        print("   ‚Ä¢ Tema personalizado com cores otimizadas")
        print("   ‚Ä¢ Gr√°ficos interativos com hover e zoom")
        print("   ‚Ä¢ Filtros em tempo real na sidebar")
        print("   ‚Ä¢ M√©tricas com indicadores visuais")
        print("   ‚Ä¢ CSS customizado para melhor UX")
        
        print(f"\nüîß COMO EXECUTAR:")
        print("   1. Execute: python3 iniciar_dashboard.py")
        print("   2. Ou execute: streamlit run dashboard.py")
        print("   3. Acesse: http://localhost:8501")
        
        print("\n" + "=" * 60)
        print("‚úÖ DASHBOARD PRONTO PARA USO!")
        print("üöÄ Execute o comando acima para iniciar a interface web")
        print("=" * 60)
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao analisar dados: {e}")
        return False

def main():
    """Fun√ß√£o principal."""
    sucesso = demonstrar_funcionalidades()
    
    if sucesso:
        print("\nüí° DICA: Para uma experi√™ncia completa, execute:")
        print("   python3 iniciar_dashboard.py")
    
    return sucesso

if __name__ == "__main__":
    main()
